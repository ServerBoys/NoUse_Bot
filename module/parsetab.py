
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEleftPOWERPOWERSROOTleftSB_OPENSB_CLOSEMB_OPENMB_CLOSEBB_OPENBB_CLOSEleftCONSTANTSFUNCTIONSBB_CLOSE BB_OPEN CONSTANTS DIVIDE FLOAT FUNCTIONS INT MB_CLOSE MB_OPEN MINUS MULTIPLY PLUS POWER POWERS ROOT SB_CLOSE SB_OPEN\n        calc : expression\n             | empty\n        \n        expression : expression POWER expression\n                   | expression MULTIPLY expression\n                   | expression DIVIDE expression\n                   | expression PLUS expression\n                   | expression MINUS expression\n        \n        expression : MINUS expression\n                   | ROOT expression\n        \n        expression : expression POWERS\n        \n        expression : SB_OPEN expression SB_CLOSE expression\n                   | SB_OPEN expression SB_CLOSE\n                   | expression SB_OPEN expression SB_CLOSE\n                   | MB_OPEN expression MB_CLOSE expression\n                   | MB_OPEN expression MB_CLOSE\n                   | expression MB_OPEN expression MB_CLOSE\n                   | BB_OPEN expression BB_CLOSE expression\n                   | BB_OPEN expression BB_CLOSE\n                   | expression BB_OPEN expression BB_CLOSE\n        \n        expression : INT\n                   | FLOAT\n        \n        expression : CONSTANTS\n                   | expression CONSTANTS\n        \n        expression : FUNCTIONS expression\n                   | FUNCTIONS POWERS expression\n        \n        empty :\n        '
    
_lr_action_items = {'MINUS':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[4,17,4,4,4,4,4,-20,-21,-22,4,4,4,4,4,4,-10,4,4,4,-23,-8,-9,17,17,17,-24,4,-3,-4,-5,-6,-7,17,17,17,-12,-15,-18,-25,-13,-16,-19,-11,-14,-17,]),'ROOT':([0,4,5,6,7,8,12,13,14,15,16,17,19,20,21,29,38,39,40,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'SB_OPEN':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[6,19,6,6,6,6,6,-20,-21,-22,6,6,6,6,6,6,-10,6,6,6,-23,19,19,19,19,19,-24,6,19,19,19,19,19,19,19,19,-12,-15,-18,19,-13,-16,-19,-11,-14,-17,]),'MB_OPEN':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[7,20,7,7,7,7,7,-20,-21,-22,7,7,7,7,7,7,-10,7,7,7,-23,20,20,20,20,20,-24,7,20,20,20,20,20,20,20,20,-12,-15,-18,20,-13,-16,-19,-11,-14,-17,]),'BB_OPEN':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[8,21,8,8,8,8,8,-20,-21,-22,8,8,8,8,8,8,-10,8,8,8,-23,21,21,21,21,21,-24,8,21,21,21,21,21,21,21,21,-12,-15,-18,21,-13,-16,-19,-11,-14,-17,]),'INT':([0,4,5,6,7,8,12,13,14,15,16,17,19,20,21,29,38,39,40,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'FLOAT':([0,4,5,6,7,8,12,13,14,15,16,17,19,20,21,29,38,39,40,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'CONSTANTS':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[11,22,11,11,11,11,11,-20,-21,-22,11,11,11,11,11,11,-10,11,11,11,-23,22,22,22,22,22,-24,11,22,22,22,22,22,22,22,22,11,11,11,22,-13,-16,-19,22,22,22,]),'FUNCTIONS':([0,4,5,6,7,8,12,13,14,15,16,17,19,20,21,29,38,39,40,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'$end':([0,1,2,3,9,10,11,18,22,23,24,28,30,31,32,33,34,38,39,40,41,42,43,44,45,46,47,],[-26,0,-1,-2,-20,-21,-22,-10,-23,-8,-9,-24,-3,-4,-5,-6,-7,-12,-15,-18,-25,-13,-16,-19,-11,-14,-17,]),'POWER':([2,9,10,11,18,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[13,-20,-21,-22,-10,-23,13,-9,13,13,13,-24,-3,13,13,13,13,13,13,13,-12,-15,-18,-25,-13,-16,-19,-11,-14,-17,]),'MULTIPLY':([2,9,10,11,18,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[14,-20,-21,-22,-10,-23,14,-9,14,14,14,-24,-3,-4,-5,14,14,14,14,14,-12,-15,-18,-25,-13,-16,-19,-11,-14,-17,]),'DIVIDE':([2,9,10,11,18,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[15,-20,-21,-22,-10,-23,15,-9,15,15,15,-24,-3,-4,-5,15,15,15,15,15,-12,-15,-18,-25,-13,-16,-19,-11,-14,-17,]),'PLUS':([2,9,10,11,18,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[16,-20,-21,-22,-10,-23,-8,-9,16,16,16,-24,-3,-4,-5,-6,-7,16,16,16,-12,-15,-18,-25,-13,-16,-19,-11,-14,-17,]),'POWERS':([2,9,10,11,12,18,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[18,-20,-21,-22,29,-10,-23,18,-9,18,18,18,-24,-3,18,18,18,18,18,18,18,-12,-15,-18,-25,-13,-16,-19,-11,-14,-17,]),'SB_CLOSE':([9,10,11,18,22,23,24,25,28,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,],[-20,-21,-22,-10,-23,-8,-9,38,-24,-3,-4,-5,-6,-7,42,-12,-15,-18,-25,-13,-16,-19,-11,-14,-17,]),'MB_CLOSE':([9,10,11,18,22,23,24,26,28,30,31,32,33,34,36,38,39,40,41,42,43,44,45,46,47,],[-20,-21,-22,-10,-23,-8,-9,39,-24,-3,-4,-5,-6,-7,43,-12,-15,-18,-25,-13,-16,-19,-11,-14,-17,]),'BB_CLOSE':([9,10,11,18,22,23,24,27,28,30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,],[-20,-21,-22,-10,-23,-8,-9,40,-24,-3,-4,-5,-6,-7,44,-12,-15,-18,-25,-13,-16,-19,-11,-14,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'calc':([0,],[1,]),'expression':([0,4,5,6,7,8,12,13,14,15,16,17,19,20,21,29,38,39,40,],[2,23,24,25,26,27,28,30,31,32,33,34,35,36,37,41,45,46,47,]),'empty':([0,],[3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> calc","S'",1,None,None,None),
  ('calc -> expression','calc',1,'p_calc','calc_class.py',93),
  ('calc -> empty','calc',1,'p_calc','calc_class.py',94),
  ('expression -> expression POWER expression','expression',3,'p_expression','calc_class.py',106),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','calc_class.py',107),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','calc_class.py',108),
  ('expression -> expression PLUS expression','expression',3,'p_expression','calc_class.py',109),
  ('expression -> expression MINUS expression','expression',3,'p_expression','calc_class.py',110),
  ('expression -> MINUS expression','expression',2,'p_expression_short','calc_class.py',117),
  ('expression -> ROOT expression','expression',2,'p_expression_short','calc_class.py',118),
  ('expression -> expression POWERS','expression',2,'p_expression_powers','calc_class.py',124),
  ('expression -> SB_OPEN expression SB_CLOSE expression','expression',4,'p_expression_brackets','calc_class.py',130),
  ('expression -> SB_OPEN expression SB_CLOSE','expression',3,'p_expression_brackets','calc_class.py',131),
  ('expression -> expression SB_OPEN expression SB_CLOSE','expression',4,'p_expression_brackets','calc_class.py',132),
  ('expression -> MB_OPEN expression MB_CLOSE expression','expression',4,'p_expression_brackets','calc_class.py',133),
  ('expression -> MB_OPEN expression MB_CLOSE','expression',3,'p_expression_brackets','calc_class.py',134),
  ('expression -> expression MB_OPEN expression MB_CLOSE','expression',4,'p_expression_brackets','calc_class.py',135),
  ('expression -> BB_OPEN expression BB_CLOSE expression','expression',4,'p_expression_brackets','calc_class.py',136),
  ('expression -> BB_OPEN expression BB_CLOSE','expression',3,'p_expression_brackets','calc_class.py',137),
  ('expression -> expression BB_OPEN expression BB_CLOSE','expression',4,'p_expression_brackets','calc_class.py',138),
  ('expression -> INT','expression',1,'p_expression_int_float','calc_class.py',150),
  ('expression -> FLOAT','expression',1,'p_expression_int_float','calc_class.py',151),
  ('expression -> CONSTANTS','expression',1,'p_expression_constants','calc_class.py',157),
  ('expression -> expression CONSTANTS','expression',2,'p_expression_constants','calc_class.py',158),
  ('expression -> FUNCTIONS expression','expression',2,'p_expression_functions','calc_class.py',167),
  ('expression -> FUNCTIONS POWERS expression','expression',3,'p_expression_functions','calc_class.py',168),
  ('empty -> <empty>','empty',0,'p_empty','calc_class.py',181),
]
